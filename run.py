import stringimport timeimport randomfrom Tkinter import *import Tkinter,tkFileDialogimport tkMessageBoximport osdef rotate(times, amount, value, limit):	temp = value	the_amount = amount	while times > 0:		while the_amount > 0:				if temp == limit:				temp = 0				the_amount -= 1			else:				temp += 1				the_amount -= 1		times -= 1		the_amount = amount	return tempdef unrotate(times, amount, value, limit):	temp = value	the_amount = amount	while times > 0:		while the_amount > 0:				if temp == 0:				temp = limit				the_amount -= 1			else:				temp -= 1				the_amount -= 1		times -= 1		the_amount = amount	return tempdef select_encrypt():	print 'Encrypting file...'	root = Tkinter.Tk()	the_file = tkFileDialog.askopenfile(parent=root,mode='rb',title='Choose a file')	root.destroy()	if the_file == None:		print "You must specify a file to encrypt"	else:		encrypt_file(the_file)def encrypt_file(the_file):	parts = the_file.name.split(".")	# find the type of file extension	extension = parts[len(parts)-1]	file_found = True	# try opening the file, if you can, put all the bytes into a large array	try:		f = open(the_file.name, 'rb')	except Exception:		file_found = False		print "File with that name was not found"	bytes = []	if file_found:		while 1:			time.sleep(.0001)			byte_s = f.read(1)			if not byte_s:				break			byte = byte_s[0]			bytes.append(byte)		f.close()		fileName = the_file.name		# output file with whatever file extension we are dealing with.		f = open(fileName,'wb')		key = int(random.random()*254)		f.write(chr(key))		# encrypt		for x in bytes:			value = rotate(1, key, ord(x), 255)			f.write(chr(value))		f.close()		print 'File Encryption Complete'def select_decrypt():	print 'Decrypting file...'	root = Tkinter.Tk()	the_file = tkFileDialog.askopenfile(parent=root,mode='rb',title='Choose a file')	root.destroy()	if the_file == None:		print "You must specify a file to decrypt"	else:		decrypt_file(the_file)def decrypt_file(the_file):	parts = the_file.name.split(".")	# find the type of file extension	extension = parts[len(parts)-1]	file_found = True	# try opening the file, if you can, put all the bytes into a large array	try:		f = open(the_file.name, 'rb')	except Exception:		file_found = False		print "File with that name was not found"	bytes = []	if file_found:		while 1:			time.sleep(.0001)			byte_s = f.read(1)			if not byte_s:				break			byte = byte_s[0]			bytes.append(byte)		f.close()		fileName = the_file.name		# output file with whatever file extension we are dealing with.		f = open(fileName,'wb')		key = ord(bytes.pop(0))		# decrypt		for x in bytes:			value = unrotate(1, key, ord(x), 255)			f.write(chr(value))		f.close()		print 'File Decryption Complete'def encryptDirectory():	root = Tkinter.Tk()	rootdir = tkFileDialog.askdirectory(parent=root,title='Choose a folder')	root.destroy()	for subdir, dirs, files in os.walk(rootdir):		for file in files:			f = open(file,'wb')			print "Encrypting", f.name, "..."			encrypt_file(f)	print "Folder Encrypted"def decryptDirectory():	root = Tkinter.Tk()	rootdir = tkFileDialog.askdirectory(parent=root,title='Choose a folder')	root.destroy()	for subdir, dirs, files in os.walk(rootdir):		for file in files:			f = open(file,'wb')			print "Decrypting", f.name, "..."			decrypt_file(f)	print "Folder Decrypted"root = Tkinter.Tk()root.minsize(200,200)root.geometry("250x450")E = Tkinter.Button(root, text ="Encrypt", command = encryptDirectory, padx = 100, pady = 100, bg = "red")D = Tkinter.Button(root, text ="Decrypt", command = decryptDirectory, padx = 100, pady = 100, bg = "green")E.pack()D.pack()root.mainloop()